<Modal Width="800"
       Maximizable
       Style="top:0px"
       Visible="@IsVisible"
       Title="@Title"
       Closable="true"
       DefaultMaximized="true"
       VisibleChanged="OnVisibleChanged"
       AfterClose="Closed.InvokeAsync"
       DestroyOnClose>
    @ChildContent
</Modal>

@code {
    [Parameter] public string Title { get; set; } = "对象浏览器";

    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public EventCallback Closed { get; set; }

    [Parameter] public EventCallback Opened { get; set; }

    public bool IsVisible { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    public virtual Task ShowAsync()
    {
        IsVisible = true;
        this.StateHasChanged();
        return Task.CompletedTask;
    }

    private async Task OnVisibleChanged(bool visible)
    {
        this.IsVisible = visible;
        if (visible)
        {
            await Opened.InvokeAsync();
        }
    }

}