@inject ApiService ApiService
@inject NotificationService _notice
@inherits Selector<FtpUploadConfigModel>

<GridRow>
    <Select ItemValue="c=>c"
            ItemLabel="c=>c.Name"
            TItem="FtpUploadConfigModel"
            TItemValue="FtpUploadConfigModel"
            @bind-Values="@SelectedItems"
            DataSource="@SelectedItems"
            Mode="multiple"
            AllowClear="true"
            Style="margin-bottom:4px;margin-top:4px"
            MaxTagCount="50"
            BoundaryAdjustMode="TriggerBoundaryAdjustMode.InView"
            EnableSearch
            DropdownMatchSelectWidth="false">
    </Select>


</GridRow>

<GridRow>
    <Search Placeholder="搜索" @bind-Value="@_dataSource.QueryParameters.Keywords" OnSearch="_dataSource.QueryAsync"/>
</GridRow>
<GridRow>
    <GridCol Flex=@("auto")>
        <Table Size="TableSize.Small"
               OnChange="(QueryModel<FtpUploadConfigModel> query) => OnTableChanged(query)"
               OnPageIndexChange="@_dataSource.OnPaginationEvent"
               OnPageSizeChange="@_dataSource.OnPaginationEvent"
               PageSize="@_dataSource.PageSize"
               PageIndex="@_dataSource.PageIndex"
               Total="@_dataSource.TotalCount"
               Loading="@_dataSource.IsLoading"
               DataSource="@_dataSource.ItemsSource"
               SelectedRows="@SelectedItems"
               SelectedRowsChanged="(IEnumerable<FtpUploadConfigModel> items) => OnSelectedItemsChanged(items)"
               RowKey="x => x.Id">
            <ColumnDefinitions Context="ctx">
                <Selection Key="@ctx.Id" Type="@GetSelectionMode()"/>
                <PropertyColumn Title="标志" Sortable="true" Width="100" Property="c => c.Id">
                    <Text Ellipsis Copyable Style="max-height:30px;display:flex;flex-direction:row">
                        <div style="overflow: hidden; white-space: nowrap;text-overflow: ellipsis;" title="@ctx.Id">@ctx.Id</div>
                    </Text>
                </PropertyColumn>
                <PropertyColumn Property="c => c.Name" Ellipsis Sortable Title="配置名称"></PropertyColumn>
            </ColumnDefinitions>
        </Table>
    </GridCol>
</GridRow>


@code {

    PaginationDataSource<FtpUploadConfigModel, PaginationQueryParameters> _dataSource;

    protected override IEnumerable<FtpUploadConfigModel> ItemsSource => _dataSource.ItemsSource;

    protected override void OnInitialized()
    {
        _dataSource = new PaginationDataSource<FtpUploadConfigModel, PaginationQueryParameters>(ApiService.QueryFtpUploadConfigurationListAsync, StateHasChanged);
        _dataSource.QueryParameters.PageIndex = 1;
        _dataSource.QueryParameters.PageSize = 10;

        _dataSource.ExceptionHandler = OnExepction;
        base.OnInitialized();
    }

    async Task OnExepction(Exception ex)
    {
        await _notice.Open(new NotificationConfig
        {
            Message = "加载失败",
            Description = ex.ToString()
        });
    }

    protected override async Task OnInitializedAsync()
    {
        _dataSource.QueryParameters.Keywords = null;
        _dataSource.QueryParameters.PageIndex = 1;
        await _dataSource.QueryAsync();
        await base.OnInitializedAsync();
    }

    async Task OnTableChanged(QueryModel<FtpUploadConfigModel> query)
    {
        _dataSource.QueryParameters.SortDescriptions.Clear();
        foreach (var sortModel in query.SortModel)
        {
            if (sortModel.Sort == null)
            {
                continue;
            }

            _dataSource.QueryParameters.SortDescriptions.Add(new SortDescription(sortModel.FieldName, sortModel.Sort));
        }

        await _dataSource.QueryAsync();
    }

}