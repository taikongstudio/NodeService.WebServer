<Search Placeholder="搜索" @bind-Value="@_searchText" OnSearch="()=>_table?.ReloadData()" />

<Table @ref="@_table" Resizable OnChange="OnTableChange" Size="TableSize.Small" EnableVirtualization="true" TItem="ProcessInfo" DataSource="@_dataSource">
    <PropertyColumn Title="名称" Ellipsis Sortable="true" Filterable="true" Property="c=>c.ProcessName"></PropertyColumn>
    <PropertyColumn Title="文件名称" Sortable="true" Property="c=>c.FileName"></PropertyColumn>
    <PropertyColumn Title="Id" Sortable="true" Property="c=>c.Id"></PropertyColumn>
    <PropertyColumn Title="启动时间" Sortable="true" Property="c=>c.StartTime"></PropertyColumn>
    <PropertyColumn Title="响应" Sortable="true" Property="c=>c.Responding"></PropertyColumn>
    <PropertyColumn Title="句柄个数" Width="50" Property="c=>c.HandleCount"></PropertyColumn>
    <PropertyColumn Title="内存相关" Property="c=>c.PagedMemorySize64"/>

    <ActionColumn Fixed="right" Title="操作">
        <Space Size=@("middle")>
            <SpaceItem>
                
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>

@code {
    private IEnumerable<ProcessInfo> _dataSource = [];

    [Parameter]
    public IEnumerable<ProcessInfo> Processes { get; set; } = [];

    ITable _table;
    string _searchText;

    void OnTableChange(QueryModel<ProcessInfo> query)
    {
        if (this.Processes == null || string.IsNullOrEmpty(this._searchText))
        {
            _dataSource = this.Processes;
            return;
        }
        _dataSource = query.ExecuteQuery(this.Processes.AsQueryable()).Where(
        x => x.FileName != null && x.FileName.Contains(this._searchText, StringComparison.OrdinalIgnoreCase)
        ||
        x.ProcessName != null && x.ProcessName.Contains(this._searchText, StringComparison.OrdinalIgnoreCase)
        );
    }
}
